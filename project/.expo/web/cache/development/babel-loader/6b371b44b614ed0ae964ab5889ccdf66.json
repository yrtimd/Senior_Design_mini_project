{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/zimin/Senior_Design_mini_project/project/screens/HomeScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { IconButton } from \"../components\";\nimport Firebase from \"../config/firebase\";\nimport { AuthenticatedUserContext } from \"../navigation/AuthenticatedUserProvider\";\nvar auth = Firebase.auth();\nvar FoodItem = [];\nvar scannedFoods = [];\nvar maxCalories = [];\nvar tempFoodScan = [];\nvar firstURL = 'https://api.nal.usda.gov/fdc/v1/foods/search?pageSize=2&api_key=IdOC1aXnE1eBrwNf7OzdqKdA4Flk5ib03AmyuGDo&format=abridged';\nvar secondURL = 'https://api.nal.usda.gov/fdc/v1/food/';\nvar secondURL_v2 = '?pageSize=1&api_key=IdOC1aXnE1eBrwNf7OzdqKdA4Flk5ib03AmyuGDo';\n\nvar callAPI = function callAPI(barcode_data, opt) {\n  var baseURL;\n  return _regeneratorRuntime.async(function callAPI$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (opt == 1) {\n            baseURL = secondURL.concat(barcode_data, secondURL_v2);\n          } else {\n            baseURL = firstURL;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(baseURL, {\n            params: {\n              query: barcode_data\n            }\n          }).then(function (response) {\n            if (opt == 1) {\n              tempFoodScan = {\n                \"description\": response.data.description,\n                \"labels\": response.data.labelNutrients,\n                \"ingredients\": response.data.ingredients\n              };\n            } else {\n              tempFoodScan = response.data, _this.fdcId = tempFoodScan.foods[0].fdcId;\n            }\n          }).catch(function (err) {\n            return console.error(err);\n          }));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction existCheck(SingleItem) {\n  var _this2 = this;\n\n  var dataType = typeof SingleItem;\n\n  if (typeof scannedFoods !== 'undefined' && typeof SingleItem !== 'undefined') {\n    if (typeof SingleItem.description !== 'undefined') {\n      scannedFoods.push(SingleItem);\n    }\n\n    return scannedFoods.map(function (item, index) {\n      return React.createElement(View, {\n        style: styles.mapRows,\n        key: index.toString(),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, item.description, \" \"), React.createElement(Text, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, item.labels.calories.value, \" \"));\n    });\n  }\n}\n\nfunction countCalories() {\n  maxCalories = 0;\n\n  if (typeof scannedFoods !== undefined && typeof scannedFoods.description !== 'undefined') {\n    scannedFoods.map(function (item, index) {\n      return maxCalories += tem.labels.calories.value;\n    });\n    console.log(maxCalories);\n    return null;\n  }\n}\n\nfunction saveRecipe(fileName) {}\n\nexport default function HomeScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthenticatedUserContext),\n      user = _useContext.user;\n\n  var handleSignOut = function handleSignOut() {\n    return _regeneratorRuntime.async(function handleSignOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(auth.signOut());\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  function clearList() {\n    scannedFoods = [];\n    return navigation.navigate('Home');\n  }\n\n  function removeLast() {\n    scannedFoods.pop();\n    return navigation.navigate('Home');\n  }\n\n  FoodItem = route.params;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Welcome \", user.email, \"!\"), React.createElement(IconButton, {\n    name: \"logout\",\n    size: 24,\n    onPress: handleSignOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 8\n    }\n  }, \"Home Screen\"), React.createElement(Button, {\n    title: \"Scan a Barcode\",\n    onPress: function onPress() {\n      return navigation.navigate('Scan');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Clear Current List\",\n    onPress: function onPress() {\n      return clearList();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Remove Last Food Item\",\n    onPress: function onPress() {\n      return removeLast();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Description ------\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"--------- Calories (Cal) \", console.log(scannedFoods))), existCheck(FoodItem)));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50,\n    paddingHorizontal: 12\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '600'\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: 'normal'\n  },\n  mapRows: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'flex-start',\n    backgroundColor: 'steelblue',\n    alignContent: 'flex-start'\n  }\n});","map":{"version":3,"sources":["/Users/zimin/Senior_Design_mini_project/project/screens/HomeScreen.js"],"names":["StatusBar","React","useContext","IconButton","Firebase","AuthenticatedUserContext","auth","FoodItem","scannedFoods","maxCalories","tempFoodScan","firstURL","secondURL","secondURL_v2","callAPI","barcode_data","opt","baseURL","concat","axios","get","params","query","then","response","data","description","labelNutrients","ingredients","fdcId","foods","catch","err","console","error","existCheck","SingleItem","dataType","push","map","item","index","styles","mapRows","toString","labels","calories","value","countCalories","undefined","tem","log","saveRecipe","fileName","HomeScreen","route","navigation","user","handleSignOut","signOut","clearList","navigate","removeLast","pop","container","row","title","email","flex","alignItems","justifyContent","StyleSheet","create","paddingTop","paddingHorizontal","flexDirection","marginBottom","fontSize","fontWeight","text","backgroundColor","alignContent"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;AAIA,SAASC,UAAT;AACA,OAAOC,QAAP;AACA,SAASC,wBAAT;AAGA,IAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,EAAb;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,WAAW,GAAG,EAAlB;AAEA,IAAIC,YAAY,GAAG,EAAnB;AAEA,IAAMC,QAAQ,GAAG,0HAAjB;AACA,IAAMC,SAAS,GAAG,uCAAlB;AACA,IAAMC,YAAY,GAAG,8DAArB;;AAGE,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,YAAP,EAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,cAAIA,GAAG,IAAI,CAAX,EAAc;AACZC,YAAAA,OAAO,GAAGL,SAAS,CAACM,MAAV,CAAiBH,YAAjB,EAA+BF,YAA/B,CAAV;AACD,WAFD,MAEO;AACLI,YAAAA,OAAO,GAAGN,QAAV;AACD;;AANW;AAAA,2CAQNQ,KAAK,CACRC,GADG,CACCH,OADD,EACU;AACdI,YAAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAEP;AADD;AADM,WADV,EAMLQ,IANK,CAMA,UAACC,QAAD,EAAc;AAElB,gBAAIR,GAAG,IAAI,CAAX,EAAc;AACZN,cAAAA,YAAY,GAAG;AACb,+BAAgBc,QAAQ,CAACC,IAAT,CAAcC,WADjB;AAEb,0BAAWF,QAAQ,CAACC,IAAT,CAAcE,cAFZ;AAGb,+BAAgBH,QAAQ,CAACC,IAAT,CAAcG;AAHjB,eAAf;AAMD,aAPD,MAOO;AACLlB,cAAAA,YAAY,GAAGc,QAAQ,CAACC,IAAxB,EACA,KAAI,CAACI,KAAL,GAAanB,YAAY,CAACoB,KAAb,CAAmB,CAAnB,EAAsBD,KADnC;AAGD;AACF,WApBK,EAqBLE,KArBK,CAqBC,UAAAC,GAAG;AAAA,mBAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,WArBJ,CARM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAiCF,SAASG,UAAT,CAAoBC,UAApB,EAAgC;AAAA;;AAC9B,MAAMC,QAAQ,GAAG,OAAOD,UAAxB;;AAEA,MAAI,OAAO5B,YAAP,KAAwB,WAAxB,IAAuC,OAAO4B,UAAP,KAAsB,WAAjE,EAA8E;AAC5E,QAAI,OAAOA,UAAU,CAACV,WAAlB,KAAkC,WAAtC,EACA;AACElB,MAAAA,YAAY,CAAC8B,IAAb,CAAkBF,UAAlB;AACD;;AAED,WACE5B,YAAY,CAAC+B,GAAb,CAAiB,UAACC,IAAD,EAAOC,KAAP;AAAA,aACf,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,OAApB;AAA6B,QAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOJ,IAAI,CAACd,WAAZ,MADA,EAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOc,IAAI,CAACK,MAAL,CAAYC,QAAZ,CAAqBC,KAA5B,MAFA,CADe;AAAA,KAAjB,CADF;AAQD;AACF;;AAED,SAASC,aAAT,GAAyB;AAEvBvC,EAAAA,WAAW,GAAG,CAAd;;AACA,MAAG,OAAOD,YAAP,KAAwByC,SAAxB,IAAqC,OAAOzC,YAAY,CAACkB,WAApB,KAAoC,WAA5E,EAAwF;AACtFlB,IAAAA,YAAY,CAAC+B,GAAb,CAAiB,UAACC,IAAD,EAAOC,KAAP;AAAA,aACfhC,WAAW,IAAIyC,GAAG,CAACL,MAAJ,CAAWC,QAAX,CAAoBC,KADpB;AAAA,KAAjB;AAGFd,IAAAA,OAAO,CAACkB,GAAR,CAAY1C,WAAZ;AACA,WAAO,IAAP;AACC;AACF;;AAED,SAAS2C,UAAT,CAAoBC,QAApB,EAA8B,CAI7B;;AAMD,eAAe,SAASC,UAAT,OAA2C;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AACxD,oBAAiBtD,UAAU,CAACG,wBAAD,CAA3B;AAAA,MAAQoD,IAAR,eAAQA,IAAR;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEZpD,IAAI,CAACqD,OAAL,EAFY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIlB1B,YAAAA,OAAO,CAACkB,GAAR;;AAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAQA,WAASS,SAAT,GAAqB;AACrBpD,IAAAA,YAAY,GAAG,EAAf;AAEA,WAAOgD,UAAU,CAACK,QAAX,CAAoB,MAApB,CAAP;AACD;;AAEC,WAASC,UAAT,GAAsB;AACpBtD,IAAAA,YAAY,CAACuD,GAAb;AAEF,WAAOP,UAAU,CAACK,QAAX,CAAoB,MAApB,CAAP;AACC;;AAGDtD,EAAAA,QAAQ,GAAGgD,KAAK,CAAClC,MAAjB;AACA,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEqB,MAAM,CAACsB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACuB,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACwB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAoCT,IAAI,CAACU,KAAzC,MADF,EAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAE,EAFR;AAIE,IAAA,OAAO,EAAET,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAWC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEG,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMd,UAAU,CAACK,QAAX,CAAoB,MAApB,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,EAMG,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,oBADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMD,SAAS,EAAf;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANH,EAUG,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,uBADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAME,UAAU,EAAhB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVH,EAcG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACuB,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAgChC,OAAO,CAACkB,GAAR,CAAY3C,YAAZ,CAAhC,CAFF,CAdH,EAkBI2B,UAAU,CAAC5B,QAAD,CAlBd,CAXD,CAFF;AAmCD;AAED,IAAMmC,MAAM,GAAG6B,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETK,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,iBAAiB,EAAE;AAHV,GADoB;AAM/BT,EAAAA,GAAG,EAAE;AACHU,IAAAA,aAAa,EAAE,KADZ;AAEHL,IAAAA,cAAc,EAAE,eAFb;AAGHD,IAAAA,UAAU,EAAE,QAHT;AAIHO,IAAAA,YAAY,EAAE;AAJX,GAN0B;AAY/BV,EAAAA,KAAK,EAAE;AACLW,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GAZwB;AAgB/BC,EAAAA,IAAI,EAAE;AACJF,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE;AAFR,GAhByB;AAoB/BnC,EAAAA,OAAO,EAAE;AACPgC,IAAAA,aAAa,EAAE,KADR;AAGPL,IAAAA,cAAc,EAAE,cAHT;AAIPD,IAAAA,UAAU,EAAG,YAJN;AAKPW,IAAAA,eAAe,EAAE,WALV;AAMPC,IAAAA,YAAY,EAAG;AANR;AApBsB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useContext } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n//import {Dropdown} from 'react-native-dropdown';\n\nimport { IconButton } from '../components';\nimport Firebase from '../config/firebase';\nimport { AuthenticatedUserContext } from '../navigation/AuthenticatedUserProvider';\n\n\nconst auth = Firebase.auth();\nvar FoodItem = [];\nlet scannedFoods = [];\nlet maxCalories = [];\n\nlet tempFoodScan = [];\n\nconst firstURL = 'https://api.nal.usda.gov/fdc/v1/foods/search?pageSize=2&api_key=IdOC1aXnE1eBrwNf7OzdqKdA4Flk5ib03AmyuGDo&format=abridged';\nconst secondURL = 'https://api.nal.usda.gov/fdc/v1/food/';\nconst secondURL_v2 = '?pageSize=1&api_key=IdOC1aXnE1eBrwNf7OzdqKdA4Flk5ib03AmyuGDo';\n\n\n  const callAPI = async (barcode_data, opt) => {\n      var baseURL;\n      if (opt == 1) {\n        baseURL = secondURL.concat(barcode_data, secondURL_v2);\n      } else {\n        baseURL = firstURL;\n      }\n\n      await axios\n        .get(baseURL, {\n        params: {\n          query: barcode_data\n        }\n      })\n      .then((response) => {\n\n        if (opt == 1) {\n          tempFoodScan = {\n            \"description\" : response.data.description,\n            \"labels\" : response.data.labelNutrients,\n            \"ingredients\" : response.data.ingredients\n          }\n          //scannedFoods.push(tempFoodScan)\n        } else {\n          tempFoodScan = response.data,\n          this.fdcId = tempFoodScan.foods[0].fdcId\n          //console.log(tempFoodScan)\n        }   \n      })\n      .catch(err => console.error(err));\n    } //More functional API QUERRY\n\n\nfunction existCheck(SingleItem) {\n  const dataType = typeof(SingleItem);\n  \n  if (typeof scannedFoods !== 'undefined' && typeof SingleItem !== 'undefined') {\n    if (typeof SingleItem.description !== 'undefined')\n    {\n      scannedFoods.push(SingleItem)\n    }\n\n    return (\n      scannedFoods.map((item, index) =>\n        <View style={styles.mapRows} key={index.toString()}>\n        <Text>{item.description} </Text>\n        <Text>{item.labels.calories.value} </Text>\n        </View>\n      )\n    )\n  }\n}\n\nfunction countCalories() {\n\n  maxCalories = 0\n  if(typeof scannedFoods !== undefined && typeof scannedFoods.description !== 'undefined'){\n    scannedFoods.map((item, index) => \n      maxCalories += tem.labels.calories.value\n    )\n  console.log(maxCalories)\n  return(null)\n  }\n}\n\nfunction saveRecipe(fileName) {\n  //var fs = require('react-native-fs')\n  //fs.writeFile(\"test.json\", scannedFoods);\n  //return (null)\n}\n\n\n\n\n\nexport default function HomeScreen({ route, navigation }) {\n  const { user } = useContext(AuthenticatedUserContext);\n  const handleSignOut = async () => {\n    try {\n      await auth.signOut();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function clearList() {\n  scannedFoods = [];\n\n  return(navigation.navigate('Home'))\n}\n\n  function removeLast() {\n    scannedFoods.pop();\n\n  return(navigation.navigate('Home'))\n  }\n\n\n  FoodItem = route.params;\n  return (\n\n    <View style={styles.container}>\n      <StatusBar style='dark-content' />\n      <View style={styles.row}>\n        <Text style={styles.title}>Welcome {user.email}!</Text>\n        <IconButton\n          name='logout'\n          size={24}\n          // color='#fff'\n          onPress={handleSignOut}\n        />\n      </View>\n     <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n       <Text>Home Screen</Text>\n        <Button\n          title=\"Scan a Barcode\"\n          onPress={() => navigation.navigate('Scan')}\n        />\n        <Button\n          title=\"Clear Current List\"\n          onPress={() => clearList()}\n        />\n        <Button\n          title=\"Remove Last Food Item\"\n          onPress={() => removeLast()}\n        />\n        <View style={styles.row} >\n          <Text>Description ------</Text>\n          <Text>--------- Calories (Cal) {console.log(scannedFoods)}</Text>\n        </View>\n        {existCheck(FoodItem)} \n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 50,\n    paddingHorizontal: 12\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '600',\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: 'normal',\n  },\n  mapRows: {\n    flexDirection: 'row',\n    //flex: 1,\n    justifyContent: 'space-around',\n    alignItems : 'flex-start',\n    backgroundColor: 'steelblue',\n    alignContent : 'flex-start'\n  }\n});\n\n/*if (typeof FoodItem !== 'undefined'){\n        FoodItem.map((item, value) => (\n          <View key={value}>\n            <Text> item.value </Text>\n          </View>\n        ))\n      }*/"]},"metadata":{},"sourceType":"module"}